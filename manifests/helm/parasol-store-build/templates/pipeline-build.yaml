apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: {{ include "parasol-store-build.name" . }}-build
  labels:
    {{- include "parasol-store-build.labels" . | nindent 4 }}
spec:
  params:
    - name: source-repo
      description: source repo that contains the application code
      type: string
    - name: source-branch
      description: source branch to build from
      default: {{ .Values.gitlab.branch }}
      type: string
    - name: dockerfile
      type: string
      default: {{ .Values.image.dockerfile }}
    - name: output-image
      type: string
      default: {{ include "image.url" . }}
    - name: output-image-tag
      type: string
      default: {{ .Values.image.tag }}
  tasks:
    - name: git-clone
      params:
        - name: URL
          value: $(params.source-repo)
        - name: REVISION
          value: $(params.source-branch)
      taskRef:
        resolver: cluster
        params:
          - name: kind
            value: task
          - name: name
            value: git-clone
          - name: namespace
            value: openshift-pipelines    
      workspaces:
        - name: output
          workspace: source-folder

## -- RHDA --
# uncomment the following lines to add a Dependency Analytics task
# to the pipeline. Also uncomment the "results" section below
# to surface the scan results in the Tekton Plugin
    # - name: dependency-analytics
    #   runAfter:
    #     - git-clone
    #   taskRef:
    #     resolver: cluster
    #     params:
    #       - name: kind
    #         value: task
    #       - name: name
    #         value: redhat-dependency-analytics
    #       - name: namespace
    #         value: {{ .Release.Namespace }}   
    #   params:
    #     - name: manifest-file-path
    #       value: pom.xml
    #   workspaces:
    #     - name: output
    #       workspace: source-folder
## -- RHDA --    

    - name: build-source
      runAfter:
        - git-clone
      params:
        - name: GOALS
          value:
            - package
      taskRef:
        resolver: cluster
        params:
          - name: kind
            value: task
          - name: name
            value: maven
          - name: namespace
            value: openshift-pipelines
      workspaces:
        - name: source
          workspace: source-folder
        - name: maven_settings
          workspace: maven-settings
    - name: build-and-push-image
      runAfter:
        - build-source
      params:
        - name: DOCKERFILE
          value: $(params.dockerfile)
        - name: IMAGE
          value: $(params.output-image):$(params.output-image-tag)
        - name: TLSVERIFY
          value: 'false'
      taskRef:
        resolver: cluster
        params:
          - name: kind
            value: task
          - name: name
            value: buildah
          - name: namespace
            value: {{ .Release.Namespace }}       
      workspaces:
        - name: source
          workspace: source-folder
    - name: resync
      runAfter:
        - build-and-push-image
      taskRef:
        resolver: cluster
        params:
          - name: kind
            value: task
          - name: name
            value: resync
          - name: namespace
            value: {{ .Release.Namespace }}
## -- RHDA --  for display in vulnerabilities section
  # results:
  #   - name: RHDA_SCAN_OUTPUT
  #     value: "$(tasks.dependency-analytics.results.SCAN_OUTPUT)"
## -- RHDA --  
  workspaces:
    - name: source-folder
    - name: maven-settings
